apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-ghost-helm.fullname" . }}
  labels:
    {{- include "k8s-ghost-helm.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-ghost-helm.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "k8s-ghost-helm.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 31
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 2368
          env:
          - name: privacy__useUpdateCheck
            value: {{ .Values.ghostConfiguration.privacy.useUpdateCheck }}
          - name: APPLICATIONINSIGHTS_CONNECTION_STRING
            value: "InstrumentationKey={{ .Values.applicationInsights.connectionString }}"
          - name: APPLICATIONINSIGHTS_ROLE_NAME
            value: {{ .Values.applicationInsights.roleName }}
          - name: APPLICATIONINSIGHTS_ROLE_INSTANCE
            value: {{ .Values.applicationInsights.roleInstance }}
          - name: NODE_ENV
            value: "production"
          - name: url
            value: {{ .Values.ghostConfiguration.url }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: content
            mountPath: /var/lib/ghost/content/          
          - name: tmp
            mountPath: /tmp   
      volumes:
      - name: content
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "k8s-ghost-helm.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      - emptyDir: {}
        name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}